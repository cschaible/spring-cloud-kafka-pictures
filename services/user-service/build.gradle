buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'info.novatec.spring.showcase'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
    baseName = project.name
}

bootRun {
    systemProperties = System.properties
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://packages.confluent.io/maven" }
}

ext {
    springCloudVersion = 'Greenwich.RELEASE'
}

dependencies {
    compileOnly('org.projectlombok:lombok:1.18.4')

    compile('info.novatec.spring.showcase:user-message-api:0.0.1-SNAPSHOT')

    compile('commons-io:commons-io:2.6')
    //Workaround for error: Type javax.xml.bind.JAXBContext not present
    compile('com.sun.xml.bind:jaxb-core:2.3.0.1')
    compile('com.sun.xml.bind:jaxb-impl:2.3.0.1')
    compile('javax.activation:activation:1.1.1')
    compile('javax.xml.bind:jaxb-api')
    //End workaround
    compile('io.confluent:monitoring-interceptors:5.1.0')
    compile('org.apache.commons:commons-lang3:3.7')
    compile('org.apache.kafka:kafka-clients:2.1.0-cp1')
    compile('org.flywaydb:flyway-core')
    compile('org.springframework.amqp:spring-rabbit')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
    compile('org.springframework.cloud:spring-cloud-starter-zipkin')
    compile('org.springframework.kafka:spring-kafka')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE')

    compile('mysql:mysql-connector-java')

    testCompile("com.h2database:h2")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
