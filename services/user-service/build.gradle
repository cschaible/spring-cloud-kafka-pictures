plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'info.novatec.spring.showcase'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

bootRun {
    systemProperties = System.properties
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://packages.confluent.io/maven" }
}

ext {
    springCloudVersion = 'Greenwich.SR2'
}

dependencies {
    compileOnly('org.projectlombok:lombok:1.18.8')
    annotationProcessor('org.projectlombok:lombok:1.18.8')

    implementation('info.novatec.spring.showcase:user-message-api:0.0.1-SNAPSHOT')

    implementation('commons-io:commons-io:2.6')
    //Workaround for error: Type javax.xml.bind.JAXBContext not present
    implementation('com.sun.xml.bind:jaxb-core:2.3.0.1')
    implementation('com.sun.xml.bind:jaxb-impl:2.3.2')
    implementation('javax.activation:activation:1.1.1')
    implementation('javax.xml.bind:jaxb-api')
    //End workaround
    implementation('io.confluent:kafka-avro-serializer:5.3.0')
    implementation('org.apache.commons:commons-lang3:3.9')
    implementation('org.apache.kafka:kafka-clients:2.3.0')
    implementation('org.flywaydb:flyway-core')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.springframework.boot:spring-boot-starter-hateoas")
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
    implementation('org.springframework.kafka:spring-kafka')

    implementation('mysql:mysql-connector-java')

    testImplementation("com.h2database:h2")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
